export default {
  name: 'en',
  el: {
    hex: '哈哈',
    common: {
      property: 'Property',
      style: 'Style',
      advanced: 'Advanced',
      loop: 'Loop',
      noData: 'No Data',
      all: 'All',
      VALUE: 'VALUE',
      REMOTE: 'REMOTE',
      data: 'Data',
      operation: 'Operation',
      detailedInfo: 'Detailed information',
      small: 'Small',
      middle: 'Middle',
      large: 'Large',
      default: 'Default',
    },
    nav: {
      componentHierarchyTree: 'Hierarchy Tree',
      componentLibrary: 'Component Library',
      modalBox: 'Modal Box',
      dataSource: 'Data Source',
      actionPanel: 'Action Panel',
      multilingualCopyManagement: 'Copywriting Management',
      setting: 'Setting',
      undo: 'Undo',
      redo: 'Redo',
      clear: 'Clear',
      temporaryStorage: 'Temporary Storage',
      preview: 'Preview',
      JSONCode: 'JSON Code',
      keyboard: 'Keyboard',
      modalFrameDesign: 'Modal frame design',
    },
    globalSetting: {
      language: 'Language',
      remoteAPI: 'Remote API',
    },
    component: {
      category: {
        basic: 'Base control',
        form: 'Form control',
        business: 'Business control',
        layout: 'Layout control',
        advanced: 'Advanced control',
      },
      Text: 'Text',
      Image: 'Image',
      ButtonGroup: 'Button Group',
      Button: 'Button',
      Divider: 'Divider',
      Alert: 'Alert',
      Input: 'Input',
      Textarea: 'Textarea',
      InputNumber: 'Input Number',
      Switch: 'Switch',
      Radio: 'Radio',
      Checkbox: 'Checkbox',
      Select: 'Select',
      MultiSelect: 'Multi Select',
      DatePicker: 'Date Picker',
      RangePicker: 'Range Picker',
      TimePicker: 'Time Picker',
      TimeRangePicker: 'Time Range Picker',
      Rate: 'Rate',
      Row: 'Row',
      Column: 'Column',
      Card: 'Card',
      Space: 'Space',
      Collapse: 'Collapse',
      CollapsePanel: 'Collapse Panel',
      Tabs: 'Tabs',
      TabPane: 'Tab Pane',
      Form: 'Form',
      Vue: 'Vue',
      Modal: 'Modal',
      ModalContent: 'Modal Content',
      ModalFooter: 'Modal Footer',
    },
    placeholder: {
      search: 'Search',
      enter: 'Please enter',
      select: 'Please select',
      actionName: 'Please enter an action name',
    },
    popconfirm: {
      isDelete: 'Confirm deletion?',
      isDeleteMultilingualCopywriting:
        'This operation is not recoverable, are you sure to delete this multilingual copywriting?',
    },
    label: {
      name: 'Name',
      description: 'Description',
      parameterName: 'Parameter Name',
      parameterValue: 'Parameter Value',
    },
    required: {
      field: 'This field cannot be empty',
      actionName: 'The action name cannot be empty',
    },
    success: {
      archive: 'Archiving success',
    },
    control: {
      add: 'Add',
      edit: 'Edit',
      confirm: 'Confirm',
      cancel: 'Cancel',
      preview: 'Preview',
      save: 'Save',
      copy: 'Copy',
      delete: 'Delete',
      selectParentNode: 'Select parent node',
      enable: 'Enable',
      unEnable: 'unEnable',
    },
    property: {
      id: 'ID',
      tableName: 'Table name',
      fieldName: 'Field name',
      title: 'Title',
      content: 'Content',
      maxLine: 'Max line',
      showTitle: 'Show title',
      events: 'Events',
      startDate: 'Start date',
      endDate: 'End date',
      children: 'Children',
      align: 'Align',
      size: 'Size',
      type: 'Type',
      ghost: 'Ghost',
      danger: 'Danger',
      loading: 'Loading',
      block: 'Block',
      direction: 'Direction',
      dashed: 'Dashed',
      plain: 'Plain',
      label: 'Label',
      defaultValue: 'Default Value',
      placeholder: 'Placeholder',
      tips: 'Tips',
      behavior: 'Behavior',
      allowClear: 'Allow clear',
      addonBefore: 'Addon before',
      addonAfter: 'Addon after',
      bordered: 'Bordered',
      showCount: 'Show count',
      maxlength: 'Maxlength',
      trim: 'Trim',
      autofocus: 'Autofocus',
      rules: 'Rules',
      alwaysCommit: 'Always commit',
      controls: 'Controls',
      decimalSeparator: 'DecimalSeparator',
      keyboard: 'Keyboard',
      max: 'Max',
      min: 'Min',
      precision: 'Precision',
      stringMode: 'String mode',
      step: 'Step',
      checkedChildren: 'Checked children',
      checkedValue: 'Checked value',
      unCheckedChildren: 'UnChecked children',
      unCheckedValue: 'UnChecked value',
      options: 'Options',
      showTime: 'showTime',
      showNow: 'Show now',
      showToday: 'Show today',
      allowHalf: 'Allow half',
      character: 'Character',
      count: 'Count',
      rowGutter: 'Row gutter',
      columnGutter: 'Column gutter',
      wrap: 'Wrap',
      offset: 'Offset',
      order: 'Order',
      pull: 'Pull',
      push: 'Push',
      span: 'Span',
      xs: '<576px Responsive grids',
      sm: '≥576px Responsive grids',
      md: '≥768px Responsive grids',
      lg: '≥992px Responsive grids',
      xl: '≥1200px Responsive grids',
      xxl: '≥1600px Responsive grids',
      hoverable: 'Hoverable',
      accordion: 'Accordion',
      destroyInactivePanel: 'Destroy Inactive Panel',
      header: 'Header',
      key: 'Key',
      forceRender: 'Force render',
      showArrow: 'Show arrow',
      animated: 'Animated',
      centered: 'Centered',
      hideAdd: 'Hide Add Icon',
      tabBarGutter: 'Clearance',
      destroyInactiveTabPane: 'Destroy Inactive TabPane',
      tab: 'Tab',
      value: 'Value',
      hideRequiredMark: 'Hide required mark',
      use12Hours: 'Use 12Hours',
      hourStep: 'Hour step',
      minuteStep: 'Minute step',
      secondStep: 'Second step',
      startTime: 'Start time',
      endTime: 'End time',
      Alert: {
        message: 'Warning Contents',
        description: 'Supplementary text introduction',
        showIcon: 'Helper Icon',
        closable: 'Close button ',
        banner: 'Top Announcement',
      },
      Image: {
        src: 'Image address',
        width: 'width',
        autoWidth: 'Auto width',
        height: 'height',
        autoHeight: 'Auto height',
        fit: 'Way of placing',
        alt: 'Image caption',
        preview: 'Enable image preview',
      },
    },
    tips: {
      normal: 'normal: The basic functions of the control can be operated',
      disabled: 'disabled: The UI renders a specific style that disables the effect',
      readonly: "readonly: Only the content of the control's preset data is displayed, and the control is not editable",
      hidden:
        'hidden: Not displayed when running. The corresponding form data is not submitted by default, and can be configured in Advanced - Data Submission',
    },
    addModeBox: 'Add Mode box',
    editModeBox: 'Edit Mode box',
    copiedToSystemClipboard: 'Copied to system Clipboard',
    serial: 'Serial',
    parallel: 'Parallel',
    automaticLoading: 'Automatic Loading',
    loadingMode: 'Loading Mode',
    requestAddress: 'Request Address',
    requestMethod: 'Request Method',
    requestParameter: 'Request Params',
    requestProcessing: 'Request Processing',
    dataProcessing: 'Data Processing',
    responseProcessing: 'Response Processing',
    errorProcessing: 'Error Processing',
    addAnItem: 'Add an item',
    useHelp: 'Use help',
    errorMessage: 'Error Message',
    position: 'Position',
    syntaxCheck: 'Syntax Check',
    resetReferenceCount: 'Reset Reference Count',
    onlineCodeEditor: 'Online code editor',
    searchCopy: 'Search copy',
    addCopy: 'Add copy',
    clickAsssignment: 'Click asssignment',
    addAction: 'Add action',
    responseAction: 'Response action',
    actionName: 'Action name',
    builtInAction: 'Built-in action',
    pageJS: 'Page JS',
    parameterSetting: 'Parameter Setting',
    addNewAction: 'Add new action',
    openUrl: 'Open URL',
    openPopUp: 'Open PopUp',
    closePopUp: 'Close PopUp',
    changeInValue: 'Change in value',
    sourceCodeEdit: 'Source code edit',
    smallSize: 'Small size',
    middleSize: 'Middle size',
    largeSize: 'Large size',
    defaultSize: 'Default size',
    primaryButton: 'Primary Button',
    defaultButton: 'Default Button',
    dashedButton: 'Dshed Button',
    linkButton: 'Link Button',
    textButton: 'Text Button',
    horizontal: 'Horizontal',
    vertical: 'Vertical',
    titlePosition: 'Title position',
    leftSide: 'Left side',
    center: 'Center',
    top: 'Top',
    bottom: 'Bottom',
    rightSide: 'Right side',
    normal: 'Normal',
    disabled: 'Disabled',
    readonly: 'Readonly',
    hidden: 'Hidden',
    errorPrompt: 'Error prompt',
    ruleType: {
      required: 'Required',
      minlength: 'Minlength',
      maxlength: 'Maxlength',
      custom: 'Custom',
      min: 'Min',
      max: 'Max',
    },
    displayCommit: 'Submit on display',
    alwaysCommit: 'Always commit',
    searchForDefinedText: 'Search for defined text',
    createNewMultilingualCopy: 'Create a new multilingual copywriting',
    removeCopywritingLink: 'Remove the copywriting link',
    buttonStyle: 'Button style',
    optionType: 'Option type',
    outline: 'Outline',
    solid: 'Solid',
    button: 'Button',
    showDateFormat: 'Format',
    dataValueFormat: 'Value format',
    picker: 'Picker',
    disabledDate: 'Disabled Date',
    rangeOfLimits: 'Range of limits',
    unlimited: 'Unlimited',
    afterToday: 'After today',
    beforeToday: 'Before today',
    duration: 'Unselectable interval',
    interselectable: 'Selectable interval',
    verticalAlign: 'Align',
    horizontalAlign: 'Justify',
    spaceDirection: 'Direction of spacing',
    allChildrenCollapsible: 'Collapsible',
    collapsible: 'Collapsible',
    expandIconPosition: 'Expand Icon Position',
    panelHead: 'Panel head',
    null: 'null',
    tabBasicStyle: 'Basic tabs styles',
    lineType: 'line',
    cardType: 'card',
    tabPosition: 'Tab position',
    labelAlign: 'Label align',
    regularOperation: 'Regular operation',
    componentOperation: 'Component selection and movement',
    copyComponent: 'Copy component',
    pasteComponent: 'Paste component',
    deleteComponent: 'Delete component',
    selectParentNode: 'Select the parent node',
    selectChildrenNode: 'Selecting child node',
    selectSiblingNodeToRight: 'Select the sibling node to the right',
    selectSiblingNodeToLeft: 'Select the sibling node to the left',
    VueCode: 'Vue Code',
    spreadOver: 'Cover',
    contain: 'Contain',
    stretch: 'Fit',
  },
};
